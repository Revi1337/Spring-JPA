====================== 테이블 매핑 =========================
// @Entity
- Entity 가 붙은 클래스는 JPA 가 관리, 엔티티라고함
- JPA 를 사용해서 테이블과 매핑할 클래스는 @Entity 가 필수
* 주의
* 기본 생성자 필수 (파라미터가 없는 public 또는 protected 생성자)
* final 클래스 , enum, interface, inner 클래스는 Entity 로 사용할 수 없음.
* 저장할 필드에 final 사용 x

// DB 스키마 자동 생성
- 애플리케이션 로딩 시점에 DB 테이블을 생성하는 기능을 지원함.
- DB 방언을 활용해서 DB 에맞는 적절한 DDL 을 생성함. (설정에 dialect 부분)
* hibernate.hbm2ddl.auto
1. create : 애플리케이션이 로딩시점에 기존의 테이블은 삭제되고 다시 만들어짐.
2. create-drop : create 와 동일하지만 애플리케이션이 죽을때 테이블을 drop 함.
3. update : 변경부분만 반영 (추가된 부분은 되지만, 삭제된 부분은 불가. 운영 DB 에는 사용하면 안됨.)
4. validate : 엔티티와 테이블이 정상 매핑되었는지만확인
5. none : 사용하지 않음.
* 주의
* 운영장비에는 절대 create, create-drop, update 를 사용하면 안된다.
* 개발 초기단계는 create 또는 update
* 테스트 서버에는 update 또는 validate
* 스테이징과 운영 서버는 validate 또는 none
- DDL 생성 기능은 DDL 을 자동생성할 때만 사용되고 JPA 의 실행 로직에는 영향을 주지 않는다.

====================== 필드와 컬럼매핑 =========================