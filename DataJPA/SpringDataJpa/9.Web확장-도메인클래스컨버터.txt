// Web 확장 - 도메인 클래스 컨버터
- HTTP 파라미터로 넘어온 엔티티의 아이디로 엔티티 객체를 찾아서 바인딩

// 사용 전 (파라미터로 넘어온 ID 를 직접 repository 로 검색)
@GetMapping(value = "/members/{id}")
public String findMember(@PathVariable(name = "id") Long id) {
    Member member = memberRepository.findById(id).get();
    return member.getUsername();
}

// 사용 후
- HTTP 요청은 회원 id 를 받지만 도메인 클래스 컨버터가 중간에 동작해서 회원 엔티티 객체를 반환
- 도메인 클래스 컨버터도 리파지토리를 사용해서 엔티티를 찾음
@GetMapping(value = "/members2/{id}")
public String findMember2(@PathVariable(name = "id") Member member) {
    return member.getUsername();
}

// 주의 : 도메인 클래스 컨버터로 엔티티를 파라미터로 받으면, 이 엔티티는 단순 조회용으로만 사용해야 한다.
(트랜잭션이 없는 범위에서 엔티티를 조회했으므로, 엔티티를 변경해도 DB에 반영되지 않는다.)

-- 결론 : 그냥 쓰지말자..